コストマップの改良をしてみる
とりあえず自分がある程度把握しているpy3_sample_kai.pyのコストマップを流用してみる
また，視界外からゴール+視界までのマップにもコストをつける
この時，障害物の一つ奥には障害物がある可能性がちょっと高い気がしたので，障害物の奥のコストを少し重くした．また，コースの両端のコストをほんのり重くした
あまり時間もないのでこれで結果を確認してみる

山内に倣ってpab_cal3_dep1とbeamSearchと対戦させてみる
race1はjockeyが左，race2は右

jockey - pab_cal3_dep1
       sample     1          2        3        4       5     6         7          8        9       10
race1  44-46.5  23.9-26.5  200-200  380-380  74-300  50-51  43-44.5  34.8-35.3  37.8-40.8  19-23  34.6-32.8
rsce2  49-41.5  24.3-25.8  45.5-200  380-380  77-72  50-51  200-200  35.3-34.8  37.8-65.8  18-23  28.4-27.8

jockey - beamSearch
       sample     1          2        3        4       5     6         7          8        9       10
race1   47-53   23.5-26    200-42   380-79   300-79  50-28  200-200  32.3-39.2  35.8-41.5  100-20  26.8-28.6
rsce2   49-41.5  24-25.8    42-200  82-380    77-300  27-50  200-200  36.2-35.8  41-38.8   19-20   27.1-26.8

見づらくてすまぬ…うまく書けなんだ…

対pab_cal3_dep1は5勝4敗2分け
対beamSearchは5勝5敗1分け
という結果となった
負け越すことはなかったけどなんか微妙な結果に…
対pab_cal3_dep1戦のコース8における右スタート時に逆走しやがった…
原因は調査しているが，いまだに特定できてない…
あとは，pab_cal3_dep1時代に比べて考慮時間が足りなくなることが増えてしまった

不本意ながら時間切れっぽいのでひとまず完成としておく…
